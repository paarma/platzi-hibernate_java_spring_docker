<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.9.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.platzi</groupId>
	<artifactId>e-reservation</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>e-reservation</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- JPA  y Postgres -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<!-- Swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.7.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.10.0</version>
		</dependency>

		<!-- Seguridad -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		<!-- Thymeleaf (para creación de paginas htmls) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>e-reservation</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- plugin para docker -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.21.0</version>
				<configuration>
					<images>
						<image>
							<!-- ID dockerHub/nombreImagen (en este caso es el nombre del proyecto definido en la etiqueta <finalName>) -->
							<name>paarma/${project.build.finalName}</name>
							<!-- Como contruirá la imagen: -->
							<build>
								<from>openjdk:latest</from>
								<!-- entryPoint: representa comando a ejecutarse en la contrucción de la imagen 
								(En este caso definir un profile "perfil para ambiente ya sea prod (produccion para esto se creó
								el archivo de configuración con el prefijo prod "application-prod.yaml"), desarrollo, etc")  
								y en una ruta temporal inventada (de un sistema unix) donde generará el .jar de la app. para la construcción de la imagen-->
								<entryPoint>java -Dspring.profiles.active=prod -jar /Users/tmp/application/${project.build.finalName}.jar</entryPoint>
								<!-- ensamblado de la app -->
								<assembly>
									<basedir>/Users/tmp/application/</basedir>
									<descriptorRef>artifact</descriptorRef>
									<inline>
									<id>assembly</id>
										<files>
											<file>
												<!-- ruta interna del proyecto donde se genera el jar de la app por defecto-->
												<source>target/${project.build.finalName}.jar</source>
											</file>
										</files>
									</inline>
								</assembly>
								
								<!-- se genera el tag de la imagen -->
								<tags>
									<tag>latest</tag>
								</tags>
								
								<!-- puerto en el cual se expone la app -->
								<ports>
									<port>8080</port>
								</ports>
							</build>
							
							<!-- ejecucion de la imagen -->
							<run>
								<namingStrategy>alias</namingStrategy>
							</run>
							<alias>{project.build.finalName}</alias>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
